<?php
/**
 * @file
 * This module allows to add subscription form.
 */

/**
 * Implements hook_menu().
 */
function d7_pets_registration_menu() {
  $items = array();

  $items['d7_pets_registration'] = array(
    'title' => 'Pets registration',
    'description' => 'A form to registry your pets.',
    'file' => 'd7_pets_registration_create_form.inc',
    'file path' => drupal_get_path('module', 'd7_pets_registration') . '/includes',
    'page callback' => 'd7_pets_registration_create_form',
    'page arguments' => array('d7_pets_registration_form'),
    'access arguments' => array('access d7_pets_registration content')
  );

  $items['d7_pets_owners_table'] = array(
    'title' => 'Table with pets owners data.',
    'page callback' => 'd7_pets_owners_table_page',
    'access arguments' => array('administer site configuration'),
  );

  $items['d7_pets_owners/%/delete'] = array(
    'title callback' => 'd7_pets_owners_delete_page_title',
    'title arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('d7_pets_owners_delete_form', 1),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function d7_pets_registration_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_permission().
 */
function d7_pets_registration_permission() {
  return array(
    'access d7_pets_registration content' => array(
      'title' => t('Access content for the D7 Pets Registration posts module'),
    )
  );
}

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function d7_pets_registration_help($path, $arg) {
  switch ($path) {
    case "admin/help#d7_pets_registration":
      return t("Allows to add d7 Pets Registration form");
      break;
  }
}

/**
 * Implements hook_form().
 *
 * Creates form for subscription.
 */
function d7_pets_registration_form($form, &$form_state) {

  $form['userName'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your name?'),
    '#size' => 20,
    '#maxlength' => 20,
    '#attributes' => array(
      'placeholder' => t('Name *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'regexp[/^[a-zA-Z ]*$/]',
        'error' => t('Only letters and white spaces allowed in Your Name.'
        )
      )
    ),
    '#required' => TRUE,
  );

  $form['lastName'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your last name?'),
    '#size' => 30,
    '#maxlength' => 30,
    '#attributes' => array(
      'placeholder' => t('Last name *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'regexp[/^[a-zA-Z ]*$/]',
        'error' => t('Only letters and white spaces allowed in Your Last Name.'
        )
      )
    ),
    '#required' => TRUE,
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your e-mail?'),
    '#size' => 30,
    '#maxlength' => 30,
    '#attributes' => array(
      'placeholder' => t('E-mail *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Invalid email format.'
        )
      )
    ),
    '#required' => TRUE,
  );

  $form['confirm_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Please, repeat your e-mail.'),
    '#size' => 30,
    '#maxlength' => 30,
    '#attributes' => array(
      'placeholder' => t('Repeate E-mail *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Invalid email format.'
        )
      )
    ),
    '#required' => TRUE,
  );

  $form['submitButton'] = array(
    '#type' => 'submit',
    '#value' => t('Registry!'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 */
function d7_pets_registration_form_submit($form, &$form_state) {
  $values = array(
    'userName' => $form_state['values']['userName'],
    'lastName' => $form_state['values']['lastName'],
    'email' => $form_state['values']['email'],
    'confirm_email' => $form_state['values']['confirm_email']
  );
  if ($values['email'] == $values['confirm_email']) {
    $result = db_select('d7_pets_owners')
      ->condition('email', $values['email'])
      ->countQuery()
      ->execute()
      ->fetchField();

    if (!$result) {
      db_insert('d7_pets_owners')
        ->fields(array(
          'name' => $values['userName'],
          'last_name' => $values['lastName'],
          'email' => $values['email']
        ))
        ->execute();

      drupal_set_message(
        t("!name, you have registered successfully! Congrats!", array('!name' => $values['userName']))
      );
    }
    else {
      drupal_set_message(
        t("!name, your e-mail is already registered.", array('!name' => $values['userName'])),
        'error'
      );
    }
  }
  else {
    drupal_set_message(
      t("!name, please check your e-mail repeat.", array('!name' => $values['userName'])),
      'error'
    );
  }
}

function d7_pets_owners_table_page() {
  $header = array(t('ID'), t('Name'), t('Last Name'), t('E-mail'), t('Action'));
  $rows = array();
  $query = db_select('d7_pets_owners')
    ->fields('d7_pets_owners')
    ->execute();
  foreach ($query as $value) {
    $rows[] = array(
      $value->owner_id,
      $value->name,
      $value->last_name,
      $value->email,
      l(t('Delete'), "d7_pets_owners/".$value->owner_id."/delete"),
    );
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}

function d7_pets_owners_delete_page_title($id) {
  $name = db_select('d7_pets_owners', 't')
    ->fields('t', array('name'))
    ->condition('owner_id', $id)
    ->execute();
    return t('Are you sure you want to delete user "@num"?', array('@num' => $name));
}

function d7_pets_owners_delete_form($form, $form_state) {
  $form = array();
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Delete'),
  );
  $form['cancel'] = array(
    '#markup' => l(t('Cancel'), 'd7_pets_owners_table'),
  );
  return $form;
}

function d7_pets_owners_delete_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $result = db_delete('d7_pet_owners')
    ->condition('owner_id', $id)
    ->execute();
  $placeholders = array('@id' => $id);
  if ($result) {
    drupal_set_message(t('Record @id successfully removed.', $placeholders));
  }
  else {
    drupal_set_message(t('Record @id is undefined.', $placeholders), 'warning');
  }
  $form_state['redirect'] = 'd7_pets_owners_table';
}
