<?php
/**
 * @file
 * This module allows to add subscription form.
 */

/**
 * Implements hook_menu().
 */
function d7_subscription_menu() {
  $items = array();

  $items['d7_subscription'] = array(
    'title' => 'Subscription',
    'description' => 'A form to subscribe.',
    'file' => 'd7_subscription_create_form.inc',
    'file path' => drupal_get_path('module', 'd7_subscription') . '/includes',
    'page callback' => 'd7_subscription_create_form',
    'page arguments' => array('d7_subscription_form'),
    'access arguments' => array('access d7_subscription content')
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function d7_subscription_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_permission().
 */
function d7_subscription_permission() {
  return array(
    'access d7_subscription content' => array(
      'title' => t('Access content for the D7 Subscription posts module'),
    )
  );
}

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function d7_subscription_help($path, $arg) {
  switch ($path) {
    case "admin/help#d7_subscription":
      return t("Allows to add d7 subscription form");
      break;
  }
}

/**
 * Implements hook_form().
 *
 * Creates form for subscription.
 */
function d7_subscription_form($form, &$form_state) {

  $form['userName'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your name?'),
    '#size' => 20,
    '#maxlength' => 20,
    '#attributes' => array(
      'placeholder' => t('Name *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'regexp[/^[a-zA-Z ]*$/]',
        'error' => t('Only letters and white spaces allowed in Your Name.'
        )
      )
    ),
    '#ajax' => array(
      'callback' => 'd7_subscription_lastname_callback',
      'wrapper' => 'lastname',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );

  $form['lastName'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your last name?'),
    '#size' => 30,
    '#maxlength' => 30,
    '#prefix' => '<div id="lastname">',
    '#suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Last name *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'regexp[/^[a-zA-Z ]*$/]',
        'error' => t('Only letters and white spaces allowed in Your Last Name.'
        )
      )
    ),
//    '#required' => TRUE,
  );

  $form['sex'] = array(
    '#type' => 'radios',
    '#title' => t('Who are you?'),
    '#options' => array(
      'man' => t('Man'),
      'woman' => t('Woman'),
    ),
    '#default_value' => t(variable_get('sex', 'woman')),
  );

  $form['age'] = array(
    '#type' => 'textfield',
    '#title' => t('How old are you?'),
    '#attributes' => array(
      'placeholder' => t('Your age'),
    ),
    '#states' => array(
      'visible' => array(
        ':input[name="sex"]' => array(
          'value' => t(variable_get('sex', 'man')),
        ),
      ),
    ),
  );

  $form['country'] = array(
    '#type' => 'select',
    '#title' => t('Choose your country'),
    '#options' => array(
      'ukraine' => t('Ukraine'),
      'usa' => t('USA'),
      'utopia' => t('Utopia'),
    ),
    '#default_value' => t(variable_get('country', 'ukraine')),
    '#suffix' => '<div id="cities"></div>',
    '#ajax' => array(
      'callback' => 'd7_subscription_city_callback',
      'wrapper' => 'cities',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('What is your e-mail?'),
    '#size' => 30,
    '#maxlength' => 30,
    '#attributes' => array(
      'placeholder' => t('E-mail *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Invalid email format.')
      )
    ),
    '#required' => TRUE,
  );

  $form['confirm_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Please, repeat your e-mail.'),
    '#size' => 30,
    '#maxlength' => 30,
    '#attributes' => array(
      'placeholder' => t('Repeate E-mail *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Invalid email format.')
      )
    ),
    '#required' => TRUE,
  );

  $form['submitButton'] = array(
    '#type' => 'submit',
    '#value' => t('Subscribe!'),
  );

  return $form;
}

function d7_subscription_lastname_callback($form, &$form_state){
  if (!empty($form_state['values']['userName'])){
    $form['lastName'] = array(
      '#type' => 'textfield',
      '#title' => t('What is your last name?'),
      '#size' => 30,
      '#maxlength' => 30,
      '#prefix' => '<div id="lastname">',
      '#suffix' => '</div>',
      '#attributes' => array(
        'placeholder' => t('Last name *'),
      ),
      '#rules' => array(
        array(
          'rule' => 'regexp[/^[a-zA-Z ]*$/]',
          'error' => t('Only letters and white spaces allowed in Your Last Name.'
          )
        )
      ),
    '#required' => TRUE,
    );
  }
  else{
    $form['lastName'] = array(
      '#type' => 'textfield',
      '#title' => t('What is your last name?'),
      '#size' => 30,
      '#maxlength' => 30,
      '#prefix' => '<div id="lastname">',
      '#suffix' => '</div>',
      '#attributes' => array(
        'placeholder' => t('Last name *'),
      ),
      '#rules' => array(
        array(
          'rule' => 'regexp[/^[a-zA-Z ]*$/]',
          'error' => t('Only letters and white spaces allowed in Your Last Name.'
          )
        )
      ),
    );
  }
}

function d7_subscription_city_callback($form, &$form_state){
  if ($form_state['values']['country'] == 'ukraine'){
    $form['city'] = array(
      '#type' => 'select',
      '#title' => t('Choose your city'),
      '#prefix' => '<div id="cities">',
      '#suffix' => '</div>',
      '#options' => array(
        'kiev' => t('Kiev'),
        'kharkov' => t('Kharkov'),
        'lvov' => t('Lvov'),
      ),
    );
  }
  elseif ($form_state['values']['country'] == 'usa'){
    $form['city'] = array(
      '#type' => 'select',
      '#title' => t('Choose your city'),
      '#prefix' => '<div id="cities">',
      '#suffix' => '</div>',
      '#options' => array(
        'washington' => t('Washington'),
        'vegas' => t('Las Vegas'),
        'york' => t('New York'),
      ),
    );
  }
  else{
    $form['city'] = array(
      '#prefix' => '<div id="cities">',
      '#suffix' => '</div>',
    );
  }
  return $form['city'];
}

/**
 * Implements hook_form_submit().
 */
function d7_subscription_form_submit($form, &$form_state) {
  drupal_set_message(
        t('Oki-doki')
      );

//  $values = array(
//    'userName' => $form_state['values']['userName'],
//    'lastName' => $form_state['values']['lastName'],
//    'email' => $form_state['values']['email'],
//    'confirm_email' => $form_state['values']['confirm_email']
//  );
//  if ($values['email'] == $values['confirm_email']) {
//    $result = db_select('d7_subscription')
//      ->condition('email', $values['email'])
//      ->countQuery()
//      ->execute()
//      ->fetchField();
//
//    if (!$result) {
//      db_insert('d7_subscription')
//        ->fields(array(
//          'name' => $values['userName'],
//          'last_name' => $values['lastName'],
//          'email' => $values['email']
//        ))
//        ->execute();
//
//      drupal_set_message(
//        t("!name, you subscribed successfully! Congrats!", array('!name' => $values['userName']))
//      );
//    }
//    else {
//      drupal_set_message(
//        t("!name, your e-mail is already subscribed.", array('!name' => $values['userName'])),
//        'error'
//      );
//    }
//  }
//  else {
//    drupal_set_message(
//      t("!name, please check your e-mail repeat.", array('!name' => $values['userName'])),
//      'error'
//    );
//  }
}
